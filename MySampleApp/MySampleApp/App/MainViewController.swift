//
//  MainViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.12
//

import UIKit
import AWSMobileHubHelper

class MainViewController: UIViewController {
    
    var demoFeatures: [DemoFeature] = []
    var signInObserver: AnyObject!
    var signOutObserver: AnyObject!
    var newUserObserver: AnyObject!
    
    fileprivate let loginButton: UIBarButtonItem = UIBarButtonItem(title: nil, style: .done, target: nil, action: nil)
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        presentSignInViewController()
        
        var demoFeature = DemoFeature.init(
            name: NSLocalizedString("User Sign-in",
                                    comment: "Label for demo menu option."),
            detail: NSLocalizedString("Enable user login with popular 3rd party providers.",
                                      comment: "Description for demo menu option."),
            icon: "UserIdentityIcon", storyboard: "UserIdentity")
        
        demoFeatures.append(demoFeature)
        
        demoFeature = DemoFeature.init(
            name: NSLocalizedString("NoSQL",
                                    comment: "Label for demo menu option."),
            detail: NSLocalizedString("Store data in the cloud.",
                                      comment: "Description for demo menu option."),
            icon: "NoSQLIcon", storyboard: "NoSQLDatabase")
        
        demoFeatures.append(demoFeature)
        
        newUserObserver = NotificationCenter.default.addObserver(self, selector: #selector(MainViewController.presentNewUserViewController), name: NSNotification.Name(rawValue: "newUser"), object: nil) as AnyObject!
        
    }
    
    deinit {
        NotificationCenter.default.removeObserver(signInObserver)
        NotificationCenter.default.removeObserver(signOutObserver)
        NotificationCenter.default.removeObserver(newUserObserver)
    }
    
    // MARK: View presentation
    
    func presentSignInViewController() {
        if !AWSIdentityManager.default().isLoggedIn {
            let storyboard = UIStoryboard(name: "SignIn", bundle: nil)
            let viewController = storyboard.instantiateViewController(withIdentifier: "Initial")
            self.present(viewController, animated: true, completion: nil)
        }
    }
    
    func presentNewUserViewController() {
        if AWSIdentityManager.default().isLoggedIn {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            let viewController = storyboard.instantiateViewController(withIdentifier: "NewUser")
            self.present(viewController, animated: true, completion: nil)
        }
    }
    
    func presentAddFoodViewController() {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let viewController = storyboard.instantiateViewController(withIdentifier: "AddFood")
        self.present(viewController, animated: true, completion: nil)
    }
    
    func presentSettingsViewController() {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let viewController = storyboard.instantiateViewController(withIdentifier: "Settings")
        self.present(viewController, animated: true, completion: nil)
    }
    
    // MARK: Utility functions
    
    func handleLogout() {
        if (AWSIdentityManager.default().isLoggedIn) {
            AWSIdentityManager.default().logout(completionHandler: {(result: Any?, error: Error?) in
                self.presentSignInViewController()
            })
            // print("Logout Successful: \(signInProvider.getDisplayName)");
        } else {
            assert(false)
        }
    }
    
    // MARK: IB Actions
    
    @IBAction func didSelectLogout(_ sender: Any) {
        handleLogout()
    }
    
    @IBAction func didSelectSettings(_ sender: Any) {
        presentSettingsViewController()
    }
    
    @IBAction func didSelectAddFood(_ sender: Any) {
        presentAddFoodViewController()
    }
}
